Встречающиеся термины и сокращения

requirements – требования, развернутое описание системы и ее возможностей

BRD – Business Requirement Document – бизнес-требования к продукту

PRD – Product Requirement Document – продуктовые требования к продукту

SRS – System Requirement Specification – системные требования к продукту

FRS – Functional Requirement Specification – функциональные требования к продукту

TR/TS – Technical Requirements / Technical Specification – технические требования к продукту

 

Что такое требования?

Requirements – это входящий и самый главный документ на разработку и тестирование, представляющий собой описание системы, ее элементов, их возможностей и взаимодействия друг с другом. 

Для чего они нужны?

Хорошие, полные и  детально проработанные требования – залог успеха не только тестирования, но и проекта в целом. Требования являются отправной точкой для определения того, что проектная команда будет планировать, проектировать, реализовывать и тестировать. Поэтому если в требованиях что-то «не то», то и продукт будет реализован «не так», а колоссальная работа множества людей будет просто выполнена впустую. Требования нужны для того, чтобы на всех этапах разработки исполнители понимали, что хотел заказчик. Формализация требований позволяет четко их формулировать и иметь возможность просматривать их заинтересованными сторонами.

Свойства требований

– Атомарность – требование должно быть максимально мало и неделимо.

Следующее требование - в системе должна быть предусмотрена возможность забронировать полет, купить билет, зарезервировать номер в отеле, арендовать машину - плохое, не соответствует свойству атомарности.

– Завершенность – требование четкое, законченное и полное.

Пример плохого требования - в системе покупки билетов пользователь иногда может вводить код аэропорта, который должен определяться системой. Но также иногда код аэропорта должен заменяться названием ближайшего города, таким образом, пользователю не требуется знать код аэропорта, но система по прежнему должна знать код аэропорта.

Это требование может быть изменено следующим образом: система должна определять аэропорт как по коду аэропорта так и по названию города.

– Недвусмысленность – требование должно быть понятным и конкретным, его можно только однозначно интерпретировать. Если формулировка требований может по-разному интерпретироваться разработчиками, пользователями и другими участниками проекта, вполне может оказаться, что построенная система будет полностью отличаться от того, что представлял себе пользователь.

Например, требование - "система не должна принимать пароль длиннее 15 символов" - плохое, т.к не проясняет что же должна делать система: позволять пользователю вводить пароль длиннее 15 символов? Или должна обрезать введенный пароль до 15 символов? Или должна выводить сообщение об ошибке в случае если пользователь введет больше 15 символов? А вот требование - "система не должна принимать пароль длиннее 15 символов. Если пользователь введет больше 15 символов, система должна отображать сообщение об ошибке с просьбой исправить пароль" - хорошее.

Следует избегать в тексте требования сокращений, т.к. это тоже будет плохим требованием.

– Непротиворечивость – требования не должны противоречить друг другу и нашим знаниям о работе ПО. Например, тестируем трейдинговую платформу. Имеются требования, в которых одним из начальных пунктов указывается невозможность для некоторых участников торгов  покупать акции какого-то банка, а потом в перечислении условий покупки этих акций эти участники каким-то образом уже могут совершать их покупку, т.е. налицо противоречие между этими двумя требованиями.

– Корректность – набор требований к ПО является корректным тогда и только тогда, когда каждое требование, сформулированное в нем, представляет нечто, требуемое от создаваемой системы.

– Реализуемость – требование должно быть выполнимо технически, реализуемо в рамках проектного времени и ресурсов.

– Тестируемость – кроме того, что требование должно быть реализуемо, оно должно быть и тестируемо.

Какие бывают требования?

1. BRD – содержат высокоуровневые цели организации или заказчика продукта. Как правило, их высказывают те, кто финансируют проект, покупатели системы, менеджер реальных пользователей, отдел маркетинга. В этом документе объясняется, почему организации нужен такой продукт, описаны цели, которые организация намерена достичь с его помощью.

2.  PRD  – описывают цели и задачи, которые пользователям даст новый продукт. К отличным способам представления этого вида требований относятся варианты использования, сценарии и таблицы «событие — отклик». Таким образом, в этом документе указано, что клиенты смогут делать с помощью системы.

3. SRS – это требования к продукту, содержащему несколько подсистем. То есть это некоторые требования, которые описывают то, как эти подсистемы должны между собой взаимодействовать. Говоря о системе, мы подразумеваем программное обеспечение или подсистемы ПО и оборудования. Люди — часть системы, поэтому определенные функции системы могут распространяться и на людей.

4.  FRS – детально определяют функциональные требования к продукту с точки зрения его реализации. В них последовательно определяется форма за формой и одна функциональная возможность продукта за другой. Эти  требования определяют функциональность ПО, которую разработчики должны построить, чтобы пользователи смогли выполнить свои задачи в рамках бизнес-требований.

5.  TR/TS – технические требования к продукту

Типы требований отличаются степенью детализации и назначением. Каждый следующий документ содержит все больше деталей реализации.

Большинство специалистов сходятся в мысли, что тестирование начинается как раз с этапа составления требований к системе. Существуют определенные условия (критерии) входа в тестирование требований, которые нужны, чтобы понять, можно ли начинать следующий этап. Сначала должны удовлетворяться эти условия, только можно проводить работу над дизайном продукта, его разработку на основании требований. Например, получаем требования, по которым видно, что они уже содержат много дефектов и не готовы (обрываются предложения, есть содержание, но на самой странице все пусто), т.е. даже смоук тест не проходит, и если у нас нет критериев входа, но есть цель - провести ревью этих требований - то мы просто зря потратим время и силы.

Также есть и критерии выхода из тестирования требований, помогающие понять, когда считать работу завершенной. Например, успешное прохождение всего чек листа, отсутствие критичных багов и другие. При полном удовлетворении критериев выхода тестирование требований считается завершенным.