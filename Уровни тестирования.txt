testing levels – уровни тестирования, они определяют то, над чем производятся тесты: над отдельным модулем, группой модулей или системой в целом
unit testing – уровень тестирования, который позволяет проверить на корректность отдельные модули исходного кода программы
integration testing  –  уровень тестирования, при котором программные модули объединяются логически и тестируются как группа. Целью тестирования является выявление багов при взаимодействии между этими программными модулями и в первую очередь направлено на проверку обмена данными между этими самими модулями
system testing – уровень тестирования, при котором ПО тестируется с точки зрения клиента, проверяются все действия и сценарии, которые клиент должен и не должен выполнять
acceptance testing – завершающий уровень тестирования, формальная проверка системы, которая выполняется самим заказчиком на окружении, близком к реальному.
end–to–end tests – тесты, которые проверяют продукт или услугу в целом (“от точки до точки”), имитируя реальные пользовательские сценарии
acceptance criteria – условия, которым должна соответствовать разработанная функциональность

 

4 уровня тестирования:
 модульное, интеграционное, системное и приемочное

1.  Модульное (компонентное) тестирование – самая ранняя стадия тестирования, тестирование отдельно взятого модуля (единицы исходного кода программы: отдельной функции, метода или объекта). Его цель – проверить, что каждый модуль работает должным образом, модульные тесты (unit-тесты) изолируют часть кода и проверяют его работоспособность. Модульное тестирование заключается в тестировании этого отдельного модуля, как части программы, подразумевая что это только модуль и он не может существовать самостоятельно и являтся частью приложения, программы

2. Интеграционное тестирование – проводится после модульного и заключается в тестировании функционирования модулей в связке друг с другом. Модули группируются в более крупные множества, над ними выполняются тесты, результаты представляются в качестве выходных данных и входных для последующего системного тестирования. Цель тестирования – протестировать взаимодействие между модулями (компонентами), их интеграцию друг с другом. Существует несколько подходов к интеграции компонентов:
- big bang - очень "экстремальный" подход, когда интегрируются одновременно все написанные модули (протестированные каждый по отдельности на уровне модульного тестирования). Да, все может заработать, но это бывает крайне редко. В основном при таком подходе обычно что-то не работает и тогда определить и локализовать проблему очень сложно, т.к. все компоненты интегрированы одновременно;
- инкрементальный, который в свою очередь бывает:
1) top-down - берем нашу спецификацию к системе и компоненты интегрируются в соотвествтии с архитектурой нашей системы строго по спецификации сверху вниз
2) bottom-up - по той же самой схеме, только компоненты начинают интегрироваться друг с другом снизу вверх
3) функциональный -  компоненты интегрируются, когда они логически относятся к одной и той же функциональности (или к набору связанных функциональностей)

3. Системное тестирование – проводит тестирование целой системы, которая полностью собрана, все ее внутренние компоненты синтегрированы, т.е. она готова к потенциальному релизу. На этом уровне мы тестируем систему целиком, проводим тестирование на всех требуемых браузерах или операционных системах (если тестируем десктоп приложение) и проводим все требуемые типы тестирования (функциональное, тестирование безопасности, тестирование юзабилити, тестирование производительности, нагрузочное тестирование и т.д.). Выполняется в тестовой среде, близкой по своим характеристикам к среде реальной эксплуатации. Тест-базисом является не только спецификация, но и бизнес-процессы, пользовательские сценарии.
Системное тестирование проводится следующим образом: 
1. Создается тестовый план, затем тест-кейсы.
2. Создаются тестовые данные, используемые для системного тестирования.
3.Проводится прогон тест-кейсов.
4. По результатам тестирования формируется отчет по выявленным ошибкам и проводится регрессионное тестирование после их исправления.
Цикл повторяется до исключения всех ошибок. По завершению системного тестирования мы предоставляем подробный отчет о найденных ошибках и рекомендации по их устранению.

4. Приемочное тестирование – проводится после успешного завершения системного тестирования. Оно проводится заказчиком с целью убеждения что продукт выглядит и работает так, как было описано в требованиях к продукту. Приемочное тестирование также может проводиться после каждого из вышеописанных уровней тестирования.
Оно бывает следующих видов:
1) Пользовательское (User acceptance testing) - сосредоточено на проверке пригодности системы для использования. Цель - убедиться, что система решает задачи конечного пользователя, бизнес-процессы выполняются так, как ожидает пользователь.
2) Операционное (эксплуатационное, оperational acceptance testing) - проверка командами, которые будут осуществлять поддержку системы, насколько данная система поддерживаема и пригодна к эксплуатации.
3) Контрактное (Contract acceptance testing) - проверка соответствия системы всем условиям договора (контракта) между заказчиком и разработчиком. Любая система контролируется специальными органами, к ней предъявляются особые требования, указанные как критерии выхода в контракте. Например, такое требование - при отказе системы время на ее восстановление должно занять не более 2-х часов - и пока приемочное тестирование не докажет, что система отвечает этому требованию, считатеся, что система это тестирование не прошла.
4) Регуляторное (Compliance acceptance testing) - проверка безопасности системы с точки зрения действующего законодательства, обязательно проводится в медицинской сфере, для различных банковских и финансовых продутов.
5) Альфа- и бета-тестирование - это тестирование пользователями будущего продукта, только альфа-тестирование проводится на стороне компании-разработчика, а бета-тестирование - за ее пределами. Например, мы разрабатываем биржевую платформу, альфа-тестирование - тестирование реальными бизнес-пользователями внутри этой биржи, а бета-тестирование - внешними пользователями, например, брокерскими конторами.