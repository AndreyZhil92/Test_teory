Встречающиеся термины и понятия
Functionality – функциональность – способность ПО обеспечивать функции, соответствующие установленным и предполагаемым потребностям при использовании ПО в определенных условиях.
Functional requirement – функциональное требование – требование, определяющее функцию, которую компонент или система должны выполнять.
Сompleteness – полнота покрытия набором функций всех указанных задач и целей пользователя.
Сorrectness – корректность, правильность расчетов и соответствие указанным или подразумеваемым требованиям.
Аppropriateness – пригодность\целесообразность функций приложения для выполнения какой-то бизнес задачи.
UI (User Interface) – пользовательский интерфейс
API (Application Programming Interface) – программный интерфейс приложения, с помощью которого одна программа может взаимодействовать с другой. API позволяет слать информацию напрямую из одной программы в другую, минуя интерфейс взаимодействия с пользователем.

Функциональное тестирование
Из прошлого урока мы выяснили, что Functional testing – это тестирование функциональности приложения, оно отвечает на вопрос "Что делает наша система?", в то время, как нефункциональное тестирвание - "Как хорошо она это делает?".
Итак, функциональное тестирование проверяет, что продукт должен делать именно те вещи, которые указаны в функциональных требованиях к нему, спецификация и бизнес-требования к системе являются входными данными для данного тестирования. Оно включает три характеристики, по которым можно оценить функции системы:
- completeness (полнота) - насколько набор функций охватывает все задачи и цели пользователя

- correctness (корректность) - насколько система обеспечивает правильные результаты с необходимой степенью точности

- appropriateness (целесообразность) - насколько функция способствует выполнению нужд, задач и целей пользователя.

Цели функционального тестирования:
– тестирование основных функций приложения

– проверка доступности системы для пользователя

– тестирования для проверки ошибок (например, отображаются ли подходящие сообщения об ошибках).

– базовое тестирование системы на удобство использования.

Вообще, тестирование удобства использования  (Usability testing) как отдельное расширенное исследование относится к нефункциональному тестированию, его проводят в несколько этапов. В функциональном тестировании мы так или иначе затрагиваем базовую проверку на соответствие требованиям, т.к. юзабилити – это та степень удобства, с которой пользователь может без затруднений применить продукт и достичь своей цели, это свойство продукта удовлетворить потребности пользователя. Юзабилити определяется такими факторами, как:

а) наличие необходимой для пользователя функциональности, ее работоспособность,

б) простота использования продукта, скорость обучения,

в) количество ошибок, которые совершают пользователи из-за непонимания,

Тестирование удобства использования  (Usability testing) как вид нефункционального тестирования, намного шире, объемнее и глубже, чем те проверки, которые мы проводим, тестируя функциональность, его проводят в несколько этапов.

Примеры (для любого типа приложений - десктопа, мобилки, веб-приложений):

1) юзабилити как часть функционального тестирования: проверка табуляции - проверяем, что перемещение с помощью клавиатуры должно осуществляться сверху вниз слева направо, а недоступные поля должны пропускаться. Табуляция - для удобства, но при этом она - часть функционала. Или тот же скроллинг - такие проверки как отсутствие скроллинга в случае, если текст вмещается на странице без прокрутки или его появление при соответствующих изменениях объема текста - это ведь функционал системы, но при этом затрагивает и удобство использования.

Поля для ввода данных,  загрузки файлов, ввода даты, со списком, кнопки, радиобаттоны, чекбоксы,  меню, таблицы, календарь, ссылки, сообщения, поп-апы - элементы пользовательского интерфейса, проводя функциональные проверки для них мы вместе с тем проводим и их тестирование на удобство использования.

2) юзабилити как вид нефункционального тестирования: берется сценарий поведения пользователей и анализируется с точки зрения стандартов юзабилити для конкретного типа программного продукта (например, android material design для мобильных приложений на платформе android), общих принципов юзабилити (информированность, свобода действий, доступность, гибкость, понятность и др), а также здравого смысла и опыта. Анализируется уровень комфорта при использовании продукта, полноценная удовлетворенность при работе с ним. На примере веб сайта в юзабилити проверяем: быстроту загрузки внешнего интерфейса ПО,  качество адаптивной верстки, качество контента, представленного на страницах, 100% однообразие графического интерфейса, наличие полной карты сайта, отсутствие раздражающих деталей для пользователей (к примеру, рекламные блоки со звуком) и т.д. Плюс все, что относится к GUI.

 Функциональное тестирование проводится на всех уровнях тестирования, проверяет UI, API, базу данных, безопасность, связь клиент / сервер и другие функциональные возможности тестируемого приложения.

Оно всегда выполняется первым (только после него идет нефункциональное), может проводиться вручную, или с использованием автоматизации.

Функциональное тестирование основано на методе тестирования черным ящиком (данный метод описан в уроке "Методы тестирования") и не касается исходного кода приложения.